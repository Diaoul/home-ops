---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  apply-ks:
    desc: Apply a Flux Kustomization resource
    summary: |
      path: Path to the Flux Kustomization resource (required)
      ns: Namespace the Flux Kustomization exists in (default: flux-system)
    cmd: |
      flux build ks $(basename {{.path}}) \
          --namespace {{.ns}} \
          --kustomization-file {{.KUBERNETES_DIR}}/apps/{{.path}}/ks.yaml \
          --path {{.KUBERNETES_DIR}}/apps/{{.path}} \
          {{- if contains "not found" .ks }}--dry-run \{{ end }}
      | \
      kubectl apply --server-side \
          --field-manager=kustomize-controller -f -
    requires:
      vars: ["path"]
    vars:
      ns: '{{.ns | default "flux-system"}}'
      ks:
        sh: flux --namespace {{.ns}} get kustomizations $(basename {{.path}}) 2>&1
    preconditions:
      - test -f {{.KUBERNETES_DIR}}/apps/{{.path}}/ks.yaml

  browse-pvc:
    desc: Browse a PersistentVolumeClaim
    summary: |
      ns: Namespace to browse PersistentVolumeClaims in (default: default)
      claim: PersistentVolumeClaim to browse (required)
    interactive: true
    cmd: kubectl browse-pvc --namespace {{.ns}} {{.claim}}
    vars:
      ns: '{{.ns | default "default"}}'
    requires:
      vars: ["claim"]
    preconditions:
      - kubectl --namespace {{.ns}} get persistentvolumeclaims {{.claim}}

  delete-failed-pods:
    desc: Delete all pods with an Evicted/Failed/Succeeded status
    cmds:
      - for: ["Evicted", "Failed", "Succeeded"]
        cmd: kubectl delete pods --field-selector status.phase={{.ITEM}} -A --ignore-not-found=true

  sync-secrets:
    desc: Sync ExternalSecret resources from provider
    summary: |
      ns: Namespace to sync secret in (default: default)
      secret: Secret to sync (default: unset/all secrets)
    cmd: |
      {{if eq .secret ""}}
        kubectl get externalsecret --all-namespaces --no-headers -A | awk '{print $1, $2}' \
          | xargs --max-procs=2 -l bash -c 'kubectl -n $0 annotate externalsecret $1 force-sync=$(date +%s) --overwrite'
      {{else}}
        kubectl --namespace {{.ns}} annotate externalsecret {{.secret}} force-sync=$(date +%s) --overwrite
      {{end}}
    vars:
      secret: '{{ .secret | default ""}}'
      ns: '{{.ns | default "default"}}'
    preconditions:
      - kubectl --namespace {{.ns}} get externalsecret {{.secret}}
