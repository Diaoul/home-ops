---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: thanos
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: thanos
      version: 1.17.2
      sourceRef:
        kind: HelmRepository
        name: stevehipwell
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: openebs
      namespace: openebs-system
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    clusterDomain: cluster.milkyway
    objstoreConfig:
      value:
        type: s3
        config:
          insecure: true
    additionalEndpoints:
      - dnssrv+_grpc._tcp.kube-prometheus-stack-thanos-discovery.observability.svc.cluster.milkyway
    additionalReplicaLabels: ["__replica__"]
    serviceMonitor:
      enabled: true
    compact:
      enabled: true
      extraArgs:
        - --compact.concurrency=4
        - --delete-delay=30m
        - --retention.resolution-raw=14d
        - --retention.resolution-5m=30d
        - --retention.resolution-1h=60d
      persistence: &persistence
        enabled: true
        storageClass: openebs-hostpath
        size: 10Gi
    query:
      replicas: 2
      extraArgs: ["--alert.query-url=https://thanos.${DOMAIN}"]
    queryFrontend:
      enabled: true
      replicas: 2
      extraEnv: &extraEnv
        - name: THANOS_CACHE_CONFIG
          valueFrom:
            configMapKeyRef:
              name: &configMap thanos-cache
              key: cache.yaml
      extraArgs: ["--query-range.response-cache-config=$(THANOS_CACHE_CONFIG)"]
      ingress:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${DOMAIN}
        ingressClassName: internal
        hosts:
          - thanos.${DOMAIN}
      podAnnotations: &podAnnotations
        configmap.reloader.stakater.com/reload: *configMap
    rule:
      enabled: true
      replicas: 2
      extraArgs: ["--web.prefix-header=X-Forwarded-Prefix"]
      alertmanagersConfig:
        value: |-
          alertmanagers:
            - api_version: v2
              static_configs:
                - dnssrv+_http-web._tcp.alertmanager-operated.observability.svc.cluster.milkyway
      rules:
        value: |-
          groups:
            - name: PrometheusWatcher
              rules:
                - alert: PrometheusDown
                  annotations:
                    summary: A Prometheus has disappeared from Prometheus target discovery
                  expr: absent(up{job="kube-prometheus-stack-prometheus"})
                  for: 5m
                  labels:
                    severity: critical
      persistence: *persistence
    storeGateway:
      replicas: 2
      extraEnv: *extraEnv
      extraArgs: ["--index-cache.config=$(THANOS_CACHE_CONFIG)"]
      persistence: *persistence
      podAnnotations: *podAnnotations
  valuesFrom:
    - targetPath: objstoreConfig.value.config.bucket
      kind: ConfigMap
      name: thanos-bucket
      valuesKey: BUCKET_NAME
    - targetPath: objstoreConfig.value.config.endpoint
      kind: ConfigMap
      name: thanos-bucket
      valuesKey: BUCKET_HOST
    - targetPath: objstoreConfig.value.config.region
      kind: ConfigMap
      name: thanos-bucket
      valuesKey: BUCKET_REGION
    - targetPath: objstoreConfig.value.config.access_key
      kind: Secret
      name: thanos-bucket
      valuesKey: AWS_ACCESS_KEY_ID
    - targetPath: objstoreConfig.value.config.secret_key
      kind: Secret
      name: thanos-bucket
      valuesKey: AWS_SECRET_ACCESS_KEY
