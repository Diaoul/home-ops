---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: zwavejs2mqtt
  namespace: home-automation
spec:
  interval: 10m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: zwavejs2mqtt
      version: 5.0.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
  values:
    image:
      repository: zwavejs/zwavejs2mqtt
      tag: 5.7.1
    service:
      main:
        ports:
          websocket:
            enabled: true
    ingress:
      main:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/target: ${DOMAIN}
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.ingress.kubernetes.io/auth-url: https://auth.${DOMAIN}/oauth2/auth
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${DOMAIN}/oauth2/start
          hajimari.io/enable: "true"
          hajimari.io/icon: home-automation
        hosts:
          - host: zwavejs2mqtt.${DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - zwavejs2mqtt.${DOMAIN}
            secretName: zwavejs2mqtt-tls
    persistence:
      config:
        enabled: true
        existingClaim: zwavejs2mqtt-config
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/serial/by-id/usb-0658_0200-if00
        mountPath: /dev/zwave-controller
    podAnnotations:
      backup.velero.io/backup-volumes: config
      pre.hook.backup.velero.io/container: fsfreeze
      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/usr/src/app/store"]'
      post.hook.backup.velero.io/container: fsfreeze
      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/usr/src/app/store"]'
    additionalContainers:
      fsfreeze:
        name: fsfreeze
        image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
        volumeMounts:
          - name: config
            mountPath: /usr/src/app/store
        securityContext:
          privileged: true
    securityContext:
      privileged: true
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-zwave
                  operator: In
                  values: ["true"]
    resources:
      requests:
        cpu: 200m
        memory: 200Mi
      limits:
        cpu: 500m
        memory: 200Mi
