---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: node-red
  namespace: home-automation
spec:
  interval: 10m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: node-red
      version: 9.0.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
  values:
    image:
      repository: nodered/node-red
      tag: 2.1.0
    env:
      NODE_RED_ENABLE_PROJECTS: "true"
    ingress:
      main:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/target: ${DOMAIN}
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.ingress.kubernetes.io/auth-url: https://auth.${DOMAIN}/oauth2/auth
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${DOMAIN}/oauth2/start
          hajimari.io/enable: "true"
          hajimari.io/icon: home-edit
        hosts:
          - host: node-red.${DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - node-red.${DOMAIN}
            secretName: node-red-tls
    persistence:
      data:
        enabled: true
        existingClaim: node-red-data
    podAnnotations:
      backup.velero.io/backup-volumes: data
      pre.hook.backup.velero.io/container: fsfreeze
      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/data"]'
      post.hook.backup.velero.io/container: fsfreeze
      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/data"]'
    additionalContainers:
      fsfreeze:
        name: fsfreeze
        image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
        volumeMounts:
          - name: data
            mountPath: /data
        securityContext:
          privileged: true
    resources:
      requests:
        cpu: 200m
        memory: 250Mi
      limits:
        memory: 500Mi
