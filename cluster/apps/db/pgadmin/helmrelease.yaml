---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: pgadmin
  namespace: db
spec:
  interval: 10m
  chart:
    spec:
      # renovate: registryUrl=https://helm.runix.net
      chart: pgadmin4
      version: 1.7.5
      sourceRef:
        kind: HelmRepository
        name: runix
        namespace: flux-system
  values:
    image:
      repository: dpage/pgadmin4
      tag: 5.7
    strategy:
      type: Recreate
    env:
      email: ${PGADMIN_EMAIL}
      password: ${PGADMIN_PASSWORD}
    ingress:
      enabled: true
      annotations:
        external-dns.alpha.kubernetes.io/target: ${DOMAIN}
        cert-manager.io/cluster-issuer: letsencrypt-production
        nginx.ingress.kubernetes.io/auth-url: https://auth.${DOMAIN}/oauth2/auth
        nginx.ingress.kubernetes.io/auth-signin: https://auth.${DOMAIN}/oauth2/start
        hajimari.io/enable: "true"
        hajimari.io/icon: database-cog
        hajimari.io/appName: pgAdmin
      hosts:
        - host: pgadmin.${DOMAIN}
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - pgadmin.${DOMAIN}
          secretName: pgadmin-tls
    persistentVolume:
      enabled: true
      existingClaim: pgadmin-config
    podAnnotations:
      backup.velero.io/backup-volumes: pgadmin-data
      pre.hook.backup.velero.io/container: fsfreeze
      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/var/lib/pgadmin"]'
      post.hook.backup.velero.io/container: fsfreeze
      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/var/lib/pgadmin"]'
    extraContainers: |
      - name: fsfreeze
        image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
        volumeMounts:
          - name: pgadmin-data
            mountPath: /var/lib/pgadmin
        securityContext:
          privileged: true
