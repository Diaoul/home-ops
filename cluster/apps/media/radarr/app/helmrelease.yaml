---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.6.0.8846@sha256:99c264af3f2d177e6674a9b304b64a35261202de30e54b35d5758d40edd94366
            envFrom:
              - secretRef:
                  name: radarr
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: &port 7878
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 200m
                memory: 500Mi
              limits:
                memory: 1Gi
    service:
      app:
        controller: radarr
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          external-dns.home.arpa/enabled: "true"
          cert-manager.home.arpa/enabled: "true"
          auth.home.arpa/enabled: "true"
        hosts:
          - host: &host radarr.${DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: radarr-tls
      api:
        annotations:
          external-dns.home.arpa/enabled: "true"
          cert-manager.home.arpa/enabled: "true"
        hosts:
          - host: *host
            paths:
              - path: /api
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: radarr-tls
    persistence:
      config:
        existingClaim: radarr
      media:
        type: nfs
        server: singularity.milkyway
        path: /volume1/media
        globalMounts:
          - path: /media
            readOnly: true
