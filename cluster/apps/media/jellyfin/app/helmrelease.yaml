---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync
  values:
    controllers:
      jellyfin:
        pod:
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
            supplementalGroups:
              - 44 # video
              - 109 # render
        containers:
          app:
            image:
              repository: jellyfin/jellyfin
              tag: 10.9.4@sha256:e6b71e6cd18fa272ffaf5c376ac0db1113dab0bddf60e889a65eab05e17cfb73
            env:
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              JELLYFIN_FFmpeg__probesize: 500M
              JELLYFIN_FFmpeg__analyzeduration: 250M
              JELLYFIN_PublishedServerUrl: https://jellyfin.${DOMAIN}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 30
            resources:
              requests:
                cpu: 1
                memory: 1Gi
                gpu.intel.com/i915: 1
              limits:
                memory: 3Gi
                gpu.intel.com/i915: 1
    service:
      app:
        controller: jellyfin
        type: LoadBalancer
        externalIPs:
          - ${JELLYFIN_IP}
        externalTrafficPolicy: Local
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        annotations:
          external-dns.home.arpa/enabled: "true"
          cert-manager.home.arpa/enabled: "true"
        hosts:
          - host: &host jellyfin.${DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: jellyfin-tls
    persistence:
      config:
        existingClaim: jellyfin
      cache:
        type: emptyDir
      transcode:
        type: emptyDir
      media:
        enabled: true
        type: nfs
        server: singularity.milkyway
        path: /volume1/media
        globalMounts:
          - path: /media
            readOnly: true
