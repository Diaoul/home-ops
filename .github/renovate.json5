{
  "extends": [
    "config:base",
    ":disableRateLimiting",
    "docker:enableMajor",
    ":enablePreCommit",
  ],
  "timezone": "Europe/Paris",
  "semanticCommits": "enabled",
  "separateMinorPatch": true,
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard",
  "suppressNotifications": ["prIgnoreNotification"],
  "kubernetes": {
    "fileMatch": ["cluster/.+\\.yaml$"],
    "ignorePaths": ["cluster/base/"]
  },
  "helm-values": {
    "fileMatch": ["cluster/.+helmrelease\\.yaml$"]
  },
  "regexManagers": [
    // helmrelease
    {
      "fileMatch": ["cluster/.+\\.yaml$"],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *chart: (?<depName>.*?)\n *version: (?<currentValue>.*)\n",
      ],
      "datasourceTemplate": "helm"
    },
    // kube-prometheus-stack crd
    {
      "fileMatch": ["cluster/crds/kube-prometheus-stack/.+\\.yaml$"],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *tag: (?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\n",
      ],
      "datasourceTemplate": "helm"
    },
    // github release based crd
    {
      "fileMatch": [
        "cluster/crds/external-snapshotter/.+\\.yaml$",
        "cluster/crds/external-dns/.+\\.yaml$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>.*?)\n *url: https:\/\/github\\.com\/(?<depName>.*?)\\.git\n *ref:\n *tag: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "github-releases"
    }
  ],
  "packageRules": [
    // datasource specific settings
    {
      "matchDatasources": ["helm"],
      "addLabels": ["renovate/helm"]
    },
    {
      "matchDatasources": ["docker"],
      "addLabels": ["renovate/docker"]
    },
    // manager specific settings
    {
      "matchManagers": ["github-actions"],
      "addLabels": ["renovate/github-actions"]
    },
    {
      "matchManagers": ["pip_requirements"],
      "addLabels": ["renovate/python"]
    },
    {
      "matchManagers": ["ansible"],
      "addLabels": ["renovate/ansible"]
    },
    {
      "matchManagers": ["ansible-galaxy"],
      "addLabels": ["renovate/ansible-galaxy"]
    },
    {
      "matchManagers": ["pre-commit"],
      "addLabels": ["renovate/pre-commit"]
    },
    // update types specific settings
    {
      "matchUpdateTypes": ["major"],
      "addLabels": ["dependency/major"],
      "stabilityDays": 3
    },
    {
      "matchUpdateTypes": ["minor"],
      "addLabels": ["dependency/minor"]
    },
    {
      "matchUpdateTypes": ["patch"],
      "addLabels": ["dependency/patch"]
    },
    // custom versions schemes
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["blakeblackshear/frigate"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$"
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["docker.io/minio/minio"],
      "versioning": "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z(-(?<compatibility>.*))?$"
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["docker.io/airsonicadvanced/airsonic-advanced"],
      "versioning": "regex:^edge-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-SNAPSHOT\\.(?<build>\\d+)$"
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["docker.io/deepquestai/deepstack"],
      "versioning": "regex:^cpu-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$"
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["photoprism/photoprism"],
      "versioning": "regex:^(?<major>\\d{2})(?<minor>\\d{2})(?<patch>\\d{2})-bullseye$"
    },
    // version strategies
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["ghcr.io/k8s-at-home/qbittorrent"],
      "versioning": "loose"
    },
    // auto-merge
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["minor", "patch"],
      "matchPackageNames": [
        "ghcr.io/k8s-at-home/flaresolverr",
        "ghcr.io/k8s-at-home/jackett",
        "ghcr.io/k8s-at-home/nzbget",
        "ghcr.io/k8s-at-home/qbittorrent",
        "ghcr.io/k8s-at-home/sonarr",
        "ghcr.io/k8s-at-home/radarr",
        "ghcr.io/k8s-at-home/lidarr",
        "ghcr.io/k8s-at-home/readarr-nightly",
        "ghcr.io/k8s-at-home/prowlarr-nightly",
      ],
      "automerge": true,
      "schedule": "after 3am and before 6am",
      "requiredStatusChecks": null,
    },
    // group rook-ceph
    {
      "matchDatasources": ["helm", "docker"],
      "matchPackagePatterns": ["^rook.ceph"],
      "groupName": "rook-ceph",
      "additionalBranchPrefix": "",
    },
    // group snapshot-controller
    {
      "matchDatasources": ["github-releases", "docker"],
      "matchPackagePatterns": [
        "external-snapshotter",
        "snapshot-controller"
      ],
      "groupName": "external-snapshotter",
      "additionalBranchPrefix": "",
    },
  ]
}
