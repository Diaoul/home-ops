// vim: ts=2 sw=2
{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":enablePreCommit",
    ":automergeDigest",
    ":automergeBranch",
    ":skipStatusChecks",
    ":timezone(Europe/Paris)",
  ],
  "dependencyDashboardTitle": "Renovate Dashboard",
  "suppressNotifications": ["prEditedNotification", "prIgnoreNotification"],
  "flux": {
    "fileMatch": ["cluster/.+\\.ya?ml$"],
    "ignorePaths": ["cluster/flux/flux-system"]
  },
  "helm-values": {
    "fileMatch": ["cluster/.+\\.ya?ml$"],
    "ignorePaths": ["cluster/flux/flux-system"]
  },
  "kubernetes": {
    "fileMatch": ["cluster/.+\\.ya?ml$"],
    "ignorePaths": ["cluster/flux/flux-system"]
  },
  "customManagers": [
    {
      "customType": "regex",
      "fileMatch": [
        "ansible/.+\\.ya?ml$",
        "cluster/.+\\.ya?ml$",
      ],
      "matchStrings": [
        // generic matcher
        // see https://regex101.com/r/fzaLfV/1
        "datasource=(?<datasource>helm) registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?\"?(?<currentValue>[^-\\s]*?)\"?\n",
        "datasource=(?<datasource>docker) image=(?<depName>\\S+)\n.*?\"?(?<currentValue>[^-\\s]*?)\"?\n",
        "datasource=(?<datasource>github-releases) repos=(?<depName>\\S+)\n.*?\"?(?<currentValue>[^-\\s]*?)\"?\n",
        "datasource=(?<datasource>pypi) package=(?<depName>\\S+)\n.*?\"?(?<currentValue>[^-\\s]*?)\"?\n",
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\"?(?<currentValue>[^-\\s]*?)\"?\n",
        // github release artifact url matcher
        // see https://regex101.com/r/qBmdwk/1
        "datasource=(?<datasource>docker) image=(?<depName>\\S+)\n.*https:\/\/github\.com\/.*\/releases\/download\/(?<currentValue>[^/]+)\/[^/]+\n",
      ],
      "datasourceTemplate": "{{datasource}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}{{#if (containsString datasource 'pypi')}}pep440{{else}}semver{{/if}}{{/if}}"
    }
  ],
  "packageRules": [
    // datasource specific settings
    {
      "matchDatasources": ["helm"],
      "addLabels": ["renovate/helm"]
    },
    {
      "matchDatasources": ["docker"],
      "addLabels": ["renovate/docker"]
    },
    // manager specific settings
    {
      "matchManagers": ["github-actions"],
      "addLabels": ["renovate/github-actions"]
    },
    {
      "matchManagers": ["pip_requirements"],
      "addLabels": ["renovate/python"]
    },
    {
      "matchManagers": ["ansible"],
      "addLabels": ["renovate/ansible"]
    },
    {
      "matchManagers": ["ansible-galaxy"],
      "addLabels": ["renovate/ansible-galaxy"]
    },
    {
      "matchManagers": ["pre-commit"],
      "addLabels": ["renovate/pre-commit"]
    },
    // update types specific settings
    {
      "matchUpdateTypes": ["major"],
      "addLabels": ["dependency/major"]
    },
    {
      "matchUpdateTypes": ["minor"],
      "addLabels": ["dependency/minor"]
    },
    {
      "matchUpdateTypes": ["patch"],
      "addLabels": ["dependency/patch"]
    },
    {
      "matchUpdateTypes": ["digest"],
      "addLabels": ["dependency/digest"]
    },
    // custom versions schemes
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["docker.io/airsonicadvanced/airsonic-advanced"],
      "versioning": "regex:^edge-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-SNAPSHOT\\.(?<build>\\d+)$"
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["docker.io/deepquestai/deepstack"],
      "versioning": "regex:^cpu-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$"
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["photoprism/photoprism"],
      "versioning": "regex:^(?<major>\\d{2})(?<minor>\\d{2})(?<patch>\\d{2})-bullseye$"
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePatterns": ["minio"],
      "versioning": "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z(-(?<compatibility>.*))?$"
    },
    // version strategies
    {
      "matchDatasources": ["docker"],
      "matchPackagePatterns": ["qbittorrent"],
      "versioning": "loose"
    },
    // auto-merge
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["minor", "patch", "digest"],
      "matchPackageNames": [
        "docker.io/golift/unpackerr",
        "ghcr.io/recyclarr/recyclarr",
        "ghcr.io/onedr0p/qbittorrent",
        "ghcr.io/onedr0p/sonarr-develop",
        "ghcr.io/onedr0p/radarr-develop",
        "ghcr.io/onedr0p/lidarr-develop",
        "ghcr.io/onedr0p/readarr-develop",
        "ghcr.io/onedr0p/prowlarr-develop",
      ],
      "automerge": true,
      "ignoreTests": true,
    },
    // group rook-ceph
    {
      "matchDatasources": ["helm", "docker"],
      "matchPackagePatterns": ["^rook.ceph"],
      "groupName": "rook-ceph",
      "additionalBranchPrefix": "",
    },
    // group snapshot-controller
    {
      "matchDatasources": ["github-releases", "docker"],
      "matchPackagePatterns": [
        "external-snapshotter",
        "snapshot-controller"
      ],
      "groupName": "external-snapshotter",
      "additionalBranchPrefix": "",
    },
  ]
}
