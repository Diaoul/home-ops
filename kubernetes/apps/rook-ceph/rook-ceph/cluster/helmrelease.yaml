---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 30m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.14.6
      sourceRef:
        kind: HelmRepository
        name: rook
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
    - name: snapshot-controller
      namespace: volsync-system
  values:
    toolbox:
      enabled: true
      resources:
        requests:
          cpu: 50m
          memory: 128Mi
        limits:
          memory: 1Gi
    monitoring:
      enabled: true
      createPrometheusRules: true
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
      osd_class_update_on_start = false
    cephClusterSpec:
      network:
        provider: host
        connections:
          requireMsgr2: true
      placement:
        mgr: &placement
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: node-role.kubernetes.io/control-plane
                      operator: Exists
        mon: *placement
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://prometheus-operated.observability.svc.cluster.local:9090
      mgr:
        modules:
          - name: pg_autoscaler
            enabled: true
      # NOTE: only overriding problematic resource constraints
      resources:
        mgr:
          requests:
            cpu: 100m # 500m
        mon:
          requests:
            cpu: 200m # 1000m
            memory: 128Mi # 1Gi
          limits:
            memory: 1Gi # 2Gi
        osd:
          requests:
            cpu: 200m # 1000m
            memory: 2Gi # 4Gi
      storage:
        deviceFilter: nvme0n1
    ingress:
      dashboard:
        ingressClassName: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${DOMAIN}
        host:
          name: rook.${DOMAIN}
          path: /
    # NOTE: same as default
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          mountOptions: []
          allowedTopologies: []
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    # NOTE: same as default except resources
    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              requests:
                cpu: 100m # 1000m
                memory: 1Gi # 4Gi
              limits:
                memory: 4Gi # 4Gi
            priorityClassName: system-cluster-critical
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          mountOptions: []
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
        metadataServer:
          resources:
            requests:
              cpu: 100m
              memory: 1Gi
            limits:
              memory: 4Gi
    # NOTE: same as default except enabled and not default
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
      annotations: {}
      labels: {}
      parameters: {}
    # NOTE: same as default except enabled
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: ceph-block
      isDefault: false
      deletionPolicy: Delete
      annotations: {}
      labels: {}
      parameters: {}
    # NOTE: same as default except resources
    cephObjectStores:
      - name: ceph-objectstore
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          dataPool:
            failureDomain: host
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
          preservePoolsOnDelete: true
          gateway:
            port: 80
            resources:
              requests:
                cpu: 200m # 1000m
                memory: 1Gi # 1Gi
              limits:
                memory: 2Gi # 2Gi
            instances: 1
            priorityClassName: system-cluster-critical
        storageClass:
          enabled: true
          name: ceph-bucket
          reclaimPolicy: Delete
          volumeBindingMode: Immediate
          parameters:
            region: us-east-1
        ingress:
          enabled: true
          ingressClassName: internal
          annotations:
            external-dns.alpha.kubernetes.io/target: internal.${DOMAIN}
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
            nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
          host:
            name: rgw.${DOMAIN}
            path: /
