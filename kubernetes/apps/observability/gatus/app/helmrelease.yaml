---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gatus
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      gatus:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          dnsConfig:
            options:
              - { name: ndots, value: "1" }
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            fsGroup: 65534
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom:
              - secretRef:
                  name: gatus
          init-config:
            dependsOn: init-db
            image:
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.30.7@sha256:318ca0734fe454e41584fe47421a07fd98eeef2721c5c0d4def2c4f0258e034b
            env:
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: both
              UNIQUE_FILENAMES: true
              METHOD: WATCH
            restartPolicy: Always
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 256Mi
        containers:
          app:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.21.0@sha256:b45c89b1f8bfd5be456306b2bf1a581cc13ca0d897faf357ef77c35ac9eca1fa
            env:
              GATUS_CONFIG_PATH: /config
              GATUS_DELAY_START_SECONDS: 5
            envFrom:
              - secretRef:
                  name: gatus
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 256Mi
    service:
      app:
        controller: gatus
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        serviceName: gatus
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        className: external
        hosts:
          - host: status.${DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    serviceAccount:
      gatus: {}
    persistence:
      config:
        type: emptyDir
      config-file:
        type: configMap
        name: gatus
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
